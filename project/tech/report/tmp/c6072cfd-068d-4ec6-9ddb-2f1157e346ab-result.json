{"name": "test_modify_lesson[{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}-{\"retcode\": 0}]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)", "trace": "self = <testcaseTech.test_lesson.TestLesson object at 0x000001B6935827F0>\ninData = '{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}'\nrepsData = '{\"retcode\": 0}'\n\n    @pytest.mark.lesson_modify\n    @pytest.mark.parametrize(\"inData,repsData\", get_excelData(\"2-课程模块\", 47, 49, 6, 8))\n    def test_modify_lesson(self,inData,repsData):\n>       res = LessonClass().modify_course(self.session,inData)\n\ntest_lesson.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Lib\\apiLessions.py:81: in modify_course\n    payload = json.loads(inData)\nd:\\tools\\python\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nd:\\tools\\python\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x000001B6923483C8>\ns = '{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)\n\nd:\\tools\\python\\lib\\json\\decoder.py:355: JSONDecodeError"}, "parameters": [{"name": "inData", "value": "'{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}'"}, {"name": "repsData", "value": "'{\"retcode\": 0}'"}], "start": 1593415081705, "stop": 1593415081705, "uuid": "2aeb0d90-405a-429e-ae4d-857243c0f6d1", "historyId": "5e88521655d6352e42ae706cec650495", "testCaseId": "a1dddd54fe696df6a93b122c2bc33fa3", "fullName": "test_lesson.TestLesson#test_modify_lesson", "labels": [{"name": "tag", "value": "lesson_modify"}, {"name": "tag", "value": "Lesson"}, {"name": "suite", "value": "test_lesson"}, {"name": "subSuite", "value": "TestLesson"}, {"name": "host", "value": "DESKTOP-56FBIJE"}, {"name": "thread", "value": "45864-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_lesson"}]}