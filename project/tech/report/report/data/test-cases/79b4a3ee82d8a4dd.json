{
  "uid" : "79b4a3ee82d8a4dd",
  "name" : "列出课程用例",
  "fullName" : "test_lesson.TestLesson#test_modify_lesson",
  "historyId" : "5e88521655d6352e42ae706cec650495",
  "time" : {
    "start" : 1593504922329,
    "stop" : 1593504922329,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
  "statusTrace" : "self = <testcaseTech.test_lesson.TestLesson object at 0x0000021BD3E22E80>\ninData = '{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}'\nrepsData = '{\"retcode\": 0}'\n\n    @allure.title(\"列出课程用例\")\n    @allure.story(\"修改课程\")\n    @pytest.mark.lesson_modify\n    @pytest.mark.parametrize(\"inData,repsData\", get_excelData(\"2-课程模块\", 47, 49, 6, 8))\n    def test_modify_lesson(self,inData,repsData):\n>       res = LessonClass().modify_course(self.session,inData)\n\ntest_lesson.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Lib\\apiLessions.py:81: in modify_course\n    payload = json.loads(inData)\nd:\\tools\\python\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nd:\\tools\\python\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000021BD2CC8390>\ns = '{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)\n\nd:\\tools\\python\\lib\\json\\decoder.py:355: JSONDecodeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1593504920701,
      "stop" : 1593504920924,
      "duration" : 223
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1593504922352,
      "stop" : 1593504922353,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "课程模块"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "修改课程"
  }, {
    "name" : "tag",
    "value" : "Lesson"
  }, {
    "name" : "tag",
    "value" : "lesson_modify"
  }, {
    "name" : "suite",
    "value" : "test_lesson"
  }, {
    "name" : "subSuite",
    "value" : "TestLesson"
  }, {
    "name" : "host",
    "value" : "DESKTOP-56FBIJE"
  }, {
    "name" : "thread",
    "value" : "21932-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_lesson"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "inData",
    "value" : "'{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}'"
  }, {
    "name" : "repsData",
    "value" : "'{\"retcode\": 0}'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5ad57698fb29a0fc",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593418451285,
        "stop" : 1593418451286,
        "duration" : 1
      }
    }, {
      "uid" : "e4addd8501415685",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593418307666,
        "stop" : 1593418307666,
        "duration" : 0
      }
    }, {
      "uid" : "4bd899d47985650",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593417606366,
        "stop" : 1593417606366,
        "duration" : 0
      }
    }, {
      "uid" : "595d1c78608be8c8",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593417058469,
        "stop" : 1593417058470,
        "duration" : 1
      }
    }, {
      "uid" : "4ec9e28c95dedde5",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593415177463,
        "stop" : 1593415177463,
        "duration" : 0
      }
    }, {
      "uid" : "c10f4bd8bffe7b8b",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593415127460,
        "stop" : 1593415127460,
        "duration" : 0
      }
    }, {
      "uid" : "90fb9d7d247c09e0",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593415081705,
        "stop" : 1593415081705,
        "duration" : 0
      }
    }, {
      "uid" : "71767264595676c5",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593415054628,
        "stop" : 1593415054628,
        "duration" : 0
      }
    }, {
      "uid" : "d06e56ca71e032fd",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593415005764,
        "stop" : 1593415005764,
        "duration" : 0
      }
    }, {
      "uid" : "3bf17a05cf71103c",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 51 (char 50)",
      "time" : {
        "start" : 1593414958175,
        "stop" : 1593414958175,
        "duration" : 0
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "Lesson", "lesson_modify" ]
  },
  "source" : "79b4a3ee82d8a4dd.json",
  "parameterValues" : [ "'{\"action\":\"modify_course\",\"id\":\"xxxx\",\"newdata\":\"\"\"{ \"name\":\"松勤\",\"desc\":\"心田老师课程\",\"display_idx\":\"5\"}\"\"\"}'", "'{\"retcode\": 0}'" ]
}